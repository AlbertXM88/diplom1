
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных	
	
перем ЗнчРеквизитовОбъектаВБазе;
	
#КонецОбласти

#Область ОбработчикиСобытий	
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = ПараметрыСеанса.ТекущийПользователь; 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	
	ДоговорКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка,"Договор" );
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента,"ВидДоговора" );
	
	Если ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Необходим вид договора на обслуживание!!!");
		Возврат;
		
	КонецЕсли;
	
	ДанныеДоговораОбслуживания = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДоговорКонтрагента,"ВидДоговора,ВКМ_ДатаНачалаДоговора,ВКМ_ДатаОкончанияДоговора,ВКМ_СтоимостьЧасаРаботы" );
	
	ДатаНачала = ДанныеДоговораОбслуживания.ВКМ_ДатаНачалаДоговора;
	ДатаОкончания = ДанныеДоговораОбслуживания.ВКМ_ДатаОкончанияДоговора;
	СтоимостьЧасаРаботы = ДанныеДоговораОбслуживания.ВКМ_СтоимостьЧасаРаботы;
	
	Если НЕ (Дата >= ДатаНачала И Дата <= ДатаОкончания) Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Закончился договор обслуживания");
	
		Возврат;
		
	КонецЕсли;
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	Движение.КоличествоЧасов = ВыполненыеРаботы.Итог("ЧасыКОплатеКлиенту");
	Движение.СуммаКОплате = Движение.КоличествоЧасов * СтоимостьЧасаРаботы;
	
	ПроцентСотруднику = ПолучитьПроцентОплаты();
	
	Если ПроцентСотруднику = Неопределено Тогда 
		Отказ = Истина;
		
		ОбщегоНазначения.СообщитьПользователю("Для специалиста не установлен процент оплаты от работы !");
		
	    Возврат;
	ИначеЕсли ПроцентСотруднику > 0 Тогда
	    Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	    Движение.Период = Дата;
	    Движение.Сотрудник = Специалист;
	    Движение.ЧасовКОплате = ВыполненыеРаботы.Итог("ЧасыКОплатеКлиенту");
	    Движение.СуммаКОплате = Движение.ЧасовКОплате * СтоимостьЧасаРаботы * ПроцентСотруднику / 100;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
   
    
	Если ОбменДанными.Загрузка Или ЭтоНовый() Тогда
	   Возврат;
	КонецЕсли;
	
	ЗнчРеквизитовОбъектаВБазе = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,"Клиент,Специалист,ДатаПроведенияРабот,ВремяНачалоРабот,ВремяОкончанияРабот" );
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НужноУведомление = Ложь;
	
	Если   ЗнчРеквизитовОбъектаВБазе = Неопределено   Тогда
		НужноУведомление = Истина;
		ТекстУведомления = СтрШаблон("Новая  задача от %1 .Выполнить: %2. Дата и время выполнения: %3 с %4 до %5.Исполнитель : %6",
		                             Клиент,ОписаниеПроблемы,ДатаПроведенияРабот,
		                             ВремяНачалоРабот,ВремяОкончанияРабот,Специалист);
	Иначе
		ТекстУведомления = СтрШаблон("Изменения в задаче от %1. Выполнить: %2.", Клиент,ОписаниеПроблемы);
		
		Если ДатаПроведенияРабот <> ЗнчРеквизитовОбъектаВБазе.ДатаПроведенияРабот Тогда
			НужноУведомление = Истина;
			ТекстУведомления = ТекстУведомления + СтрШаблон(" Дата %1.",Формат(ДатаПроведенияРабот,"ДФ=dd.MM.yyyy;" ));
		КонецЕсли;
		
	    Если ВремяНачалоРабот <> ЗнчРеквизитовОбъектаВБазе.ВремяНачалоРабот Тогда
			НужноУведомление = Истина;
			ТекстУведомления = ТекстУведомления + СтрШаблон(" Время начало работы в %1.",Формат(ВремяНачалоРабот,"ДЛФ=T;" ));
	    КонецЕсли;
	        
	    Если ВремяОкончанияРабот <> ЗнчРеквизитовОбъектаВБазе.ВремяОкончанияРабот Тогда
			НужноУведомление = Истина;
			ТекстУведомления = ТекстУведомления + СтрШаблон(" Время окончания работы до %1.",Формат(ВремяОкончанияРабот,"ДЛФ=T;" ));
		КонецЕсли;
       
        Если Специалист <> ЗнчРеквизитовОбъектаВБазе.Специалист Тогда
        	НужноУведомление = Истина;
			ТекстУведомления = ТекстУведомления + СтрШаблон(" Заменен исполнитель на %1", Специалист );
		КонецЕсли;	
        	
	КонецЕсли;
	
	Если НужноУведомление Тогда
	     НовоеУведомление = Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьЭлемент();
	     НовоеУведомление.ТекстСообщения = ТекстУведомления;
	     НовоеУведомление.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПроцентОплаты()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудников.Сотрудник КАК Сотрудник,
		|	ВКМ_УсловияОплатыСотрудников.ПроцентОтРабот КАК Процент
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудников.Период МЕЖДУ &ДатаНачало И &ДатаОкончания
		|	И ВКМ_УсловияОплатыСотрудников.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("ДатаОкончания",Дата);
	Запрос.УстановитьПараметр("ДатаНачало",НачалоМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Результат = Неопределено;
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Процент;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
#КонецЕсли
