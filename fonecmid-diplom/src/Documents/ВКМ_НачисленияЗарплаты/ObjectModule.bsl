#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = ПараметрыСеанса.ТекущийПользователь; 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	
	СформироватьДвижение();
	РасчитатьОсновныеНачисления(Отказ);
	РасчитатьУдержания();
    ЗаписатьВРегистрВзайморасчетов();
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижение()
    
	Для Каждого ТекСтрокаЗарплатыСотрудникам из ЗарплатыСотрудникам Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаЗарплатыСотрудникам.ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = ТекСтрокаЗарплатыСотрудникам.ДатаНачало;
		Движение.ПериодДействияКонец = ТекСтрокаЗарплатыСотрудникам.ДатаОкончания;
		Движение.БазовыйПериодНачало = ТекСтрокаЗарплатыСотрудникам.ДатаНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаЗарплатыСотрудникам.ДатаОкончания;
		Движение.Сотрудник = ТекСтрокаЗарплатыСотрудникам.Сотрудник;
	   
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.УдержаниеНДФЛ;
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = ТекСтрокаЗарплатыСотрудникам.ДатаНачало;
		Движение.БазовыйПериодКонец = ТекСтрокаЗарплатыСотрудникам.ДатаОкончания;
		Движение.Сотрудник = ТекСтрокаЗарплатыСотрудникам.Сотрудник;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура РасчитатьОсновныеНачисления(Отказ)
	//Обозначим переменные для параметров запроса
	ДатаРегистрации = НачалоМесяца(Дата);
	НачалоПериода = НачалоМесяца(ДатаРегистрации - 86400);
	ДатОтсчетаГода = ДобавитьМесяц(ДатаРегистрации,-12 );
	ВидПроцент = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтВыполненыхРабот; 
	ВидОклад = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
	ВидОтпускные = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВКМ_ГрафикРабочихДней.Дата) КАК ДнейЗа12мес
		|ПОМЕСТИТЬ ВТ_ДнейЗа12Мес
		|ИЗ
		|	РегистрСведений.ВКМ_ГрафикРабочихДней КАК ВКМ_ГрафикРабочихДней
		|ГДЕ
		|	ВКМ_ГрафикРабочихДней.РабочийДень = 1
		|	И ВКМ_ГрафикРабочихДней.Дата МЕЖДУ &ДатОтсчетаГода И &ДатаНачалоМес
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ГрафикРабочихДней.РабочийДень
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ВзаиморасчетыССотрудникамиОбороты.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_ВзаиморасчетыССотрудникамиОбороты.СуммаПриход) КАК СуммаПриход
		|ПОМЕСТИТЬ ВТ_ДоходЗа12Мес
		|ИЗ
		|	РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Обороты(, &ДатаНачалоМес, Год,) КАК
		|		ВКМ_ВзаиморасчетыССотрудникамиОбороты
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВзаиморасчетыССотрудникамиОбороты.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = &ВидРасчетаОтпуск
		|			ТОГДА РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало,
		|				ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДнейВсего,
		|	ВЫБОР
		|		КОГДА ВКМ_ОсновныеНачисленияДанныеГрафика.РабочийДеньФактическийПериодДействия > 0
		|			ТОГДА ВКМ_ОсновныеНачисленияДанныеГрафика.РабочийДеньФактическийПериодДействия /
		|				ВКМ_ОсновныеНачисленияДанныеГрафика.РабочийДеньПериодДействия
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВыработкаДней,
		|	ВТ_ДоходЗа12Мес.СуммаПриход КАК СуммаПриход,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ОснавнойРасчет
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(, &ДатаНачалоМес, Месяц,) КАК
		|			ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|		И ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = &ВидРсчетаПроцент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходЗа12Мес КАК ВТ_ДоходЗа12Мес
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = &ВидРасчетаОтпуск
		|		И ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВТ_ДоходЗа12Мес.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад,
		|	ЕСТЬNULL(ВТ_ОснавнойРасчет.СуммаКОплатеОборот, 0) КАК ПроценОтРаботы,
		|	ВТ_ОснавнойРасчет.ВидРасчета КАК ВидРасчета,
		|	ВТ_ОснавнойРасчет.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_ОснавнойРасчет.ДнейВсего, 0) КАК ДнейВсего,
		|	ВТ_ОснавнойРасчет.ВыработкаДней КАК ВыработкаДней,
		|	ЕСТЬNULL(ВТ_ОснавнойРасчет.СуммаПриход, 0) КАК ДоходЗаГод,
		|	ВТ_ДнейЗа12Мес.ДнейЗа12мес КАК ДнейЗа12мес,
		|	ВТ_ОснавнойРасчет.НомерСтроки
		|ИЗ
		|	ВТ_ОснавнойРасчет КАК ВТ_ОснавнойРасчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&ДатаНачалоМес, Сотрудник В
		|			(ВЫБРАТЬ
		|				ВТ_ОснавнойРасчет.Сотрудник КАК Сотрудник
		|			ИЗ
		|				ВТ_ОснавнойРасчет КАК ВТ_ОснавнойРасчет)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_ОснавнойРасчет.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|		И ВТ_ОснавнойРасчет.ВидРасчета = &ВидРасчетаОклад,
		|	ВТ_ДнейЗа12Мес КАК ВТ_ДнейЗа12Мес";

	Запрос.УстановитьПараметр("ДатаНачалоМес",Дата);
	Запрос.УстановитьПараметр("ДатОтсчета",НачалоПериода);
	Запрос.УстановитьПараметр("ДатОтсчетаГода",ДатОтсчетаГода);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРсчетаПроцент",ВидПроцент);
	Запрос.УстановитьПараметр("ВидРасчетаОклад",ВидОклад);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск",ВидОтпускные);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		 //Заполнияем процент от работы
		 Если Выборка.ВидРасчета = ВидПроцент  Тогда
		 	Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
	        Движение.Сумма = Выборка.ПроценОтРаботы;
	        Продолжить;
		 КонецЕсли;
		 //Заполняем оклад
		 Если Выборка.ВидРасчета = ВидОклад  Тогда
		 	Если Не Значениезаполнено(Выборка.Оклад) Тогда 
		 		Отказ = Истина;
		 		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Для сотрудника %1 не назначен оклад",Выборка.Сотрудник));
		 		Возврат;
		 	КонецЕсли;	
		 	
		 	Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		 	Движение.Сумма = Выборка.Оклад * Выборка.ВыработкаДней;
		 	
	        Продолжить;
		 КонецЕсли;
		 //Заполняем отпуск
	     Если Выборка.ВидРасчета = ВидОтпускные  Тогда
		 	Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		 	
		 	ДоходВДень = Формат((Выборка.ДоходЗаГод / Выборка.ДнейЗа12мес),"ЧДЦ=2;"); 
		 	
	        Движение.Сумма = Число(ДоходВДень) * Выборка.ДнейВсего;
	        Продолжить;
		 КонецЕсли;
	  
	     
	КонецЦикла;
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
КонецПроцедуры

Процедура РасчитатьУдержания()

	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сумма КАК СуммаНачислений,
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ПО ВКМ_Удержания.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник
		|		И ВКМ_ОсновныеНачисления.ПериодРегистрации = ВКМ_Удержания.ПериодРегистрации
		|		И ВКМ_Удержания.Регистратор = ВКМ_ОсновныеНачисления.Регистратор
		|		И ВКМ_Удержания.НомерСтроки = ВКМ_ОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &ССылка";
	
	Запрос.УстановитьПараметр("ССылка", ССылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
     	Если Выборка.СуммаНачислений <= 0 Тогда
     		Продолжить;
     	КонецЕсли; 
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
        Движение.Сумма = Выборка.СуммаНачислений *13/100;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(,Истина);
	
КонецПроцедуры

Процедура ЗаписатьВРегистрВзайморасчетов();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_ОсновныеНачисления.Сумма) КАК СуммаНачислений
		|ПОМЕСТИТЬ ВТ_Начисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Регистратор КАК Регистратор,
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_Удержания.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_Удержания
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник,
		|	ВКМ_Удержания.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Начисления.Сотрудник КАК Сотрудник,
		|	ВТ_Начисления.СуммаНачислений - ВТ_Удержания.Сумма КАК ИтогоСумма
		|ИЗ
		|	ВТ_Начисления КАК ВТ_Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
		|		ПО ВТ_Начисления.Сотрудник = ВТ_Удержания.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка= РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма =  Выборка.ИтогоСумма;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли