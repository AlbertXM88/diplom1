#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 ПодсветкаСтрок();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников
&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	
    ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
    ТекущиеДанные.ВсегоДнейОтпуска = (КонецДня(ТекущиеДанные.ДатаОкончания)- НачалоДня(ТекущиеДанные.ДатаНачала)-86400)/(60*60*24);
	ПроверкаПериодаОтпуска(ТекущиеДанные,ТекущиеДанные.ДатаОкончания);
	
	ПодсветкаСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	ТекущиеДанные.ВсегоДнейОтпуска = (КонецДня(ТекущиеДанные.ДатаОкончания)- НачалоДня(ТекущиеДанные.ДатаНачала)-86400)/(60*60*24);
	ПроверкаПериодаОтпуска(ТекущиеДанные,ТекущиеДанные.ДатаНачала);
	
	ПодсветкаСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

     ПодсветкаСтрок();
		

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура АнализГрафика(Команда)
	
    АдресХранилища = ПолучитьАдресХранилища();  
    // Открываем форму диаграммы
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("КлючДанных", АдресХранилища);
    
    ОткрытьФорму(
        "Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", 
        ПараметрыФормы, 
        Элементы.ОтпускаСотрудников
    );
    
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверкаПериодаОтпуска(ТекущиеДанные,ТекущийДанныеДата)
	
	Если Год(ТекущийДанныеДата) <> Год(Объект.Год) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Год не соответствует периоду отпусков'"), , "ТекущийЭлемент");
			
		ТекущиеДанные.ДатаНачала = НачалоГода(Объект.Год) ;
		
		Возврат;		
	КонецЕсли;
	
	Если ТекущиеДанные.ДатаНачала > ТекущиеДанные.ДатаОкончания  Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Дата начала позже даты окончания отпуска'"), , "ТекущиеДанные.ДатаНачала");
			
		ТекущиеДанные.ДатаНачала = НачалоГода(Объект.Год) ;
		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресХранилища()
	
	Результат = ПоместитьВоВременноеХранилище(Объект.ОтпускаСотрудников.Выгрузить(,"Сотрудник,ДатаНачала,ДатаОкончания" ),УникальныйИдентификатор );
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПодсветкаСтрок()
	
	 ТабЗнач = Объект.ОтпускаСотрудников.Выгрузить(,"Сотрудник,ВсегоДнейОтпуска");
	 ТабЗнач.Свернуть("Сотрудник","ВсегоДнейОтпуска" );
	 
     УсловноеОформление.Элементы.Очистить();
     
     Для Каждого Строка Из ТабЗнач Цикл	
     	
     	   Если Строка.ВсегоДнейОтпуска > 28 Тогда
                Оформление = УсловноеОформление.Элементы.Добавить();
                Оформление.Использование = Истина;
	
	            ПолеСотрудник = Оформление.Поля.Элементы.Добавить();
	            ПолеСотрудник.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудниковСотрудник");
	
	            ПолеДатаНачало = Оформление.Поля.Элементы.Добавить();
	            ПолеДатаНачало.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудниковДатаНачала");
	
	            ПолеДатаОкончания = Оформление.Поля.Элементы.Добавить();
	            ПолеДатаОкончания.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудниковДатаОкончания");
                Отбор = Оформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
                Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.Сотрудник"); 
                Отбор.ПравоеЗначение = Строка.Сотрудник;
	            Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	            Отбор.Использование = Истина;
	            Оформление.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.БледноЛиловый);
     	   КонецЕсли;
     	   
      КонецЦикла;
      
	// Для Каждого Строка Из Объект.ОтпускаСотрудников Цикл
	 	
	 //	Если Сотрудники.Найти(Строка.Сотрудник) Тогда
	 		
	 		
	 		
	 	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

